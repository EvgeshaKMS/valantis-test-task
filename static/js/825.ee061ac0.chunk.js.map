{"version":3,"file":"static/js/825.ee061ac0.chunk.js","mappings":"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","sources":["hooks/redux.ts","webpack://valantis-test-task/./src/pages/List/List.module.scss?3e95","webpack://valantis-test-task/./src/pages/List/Item/Item.module.scss?9438","pages/List/Item/Item.tsx","pages/List/List.tsx"],"sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"List_form__Tn7zQ\",\"pagination\":\"List_pagination__kCxPH\",\"error\":\"List_error__1-LUF\",\"list\":\"List_list__jd3f+\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Item_item__qoSUu\",\"name\":\"Item_name__3PDes\",\"brand\":\"Item_brand__nMt7D\",\"price\":\"Item_price__aRmYi\"};","import React from 'react';\n\nimport { ItemProps } from './types';\nimport styles from './Item.module.scss';\n\nconst Item = ({ item }: ItemProps) => {\n  return (\n    <li className={styles.item}>\n      <span>{item.id}</span>\n      <h3 className={styles.name}>{item.product}</h3>\n      {item.brand && <span className={styles.brand}>{item.brand}</span>}\n      <span className={styles.price}>{item.price} ₽</span>\n    </li>\n  );\n};\n\nexport default Item;\n","import React, { useEffect } from 'react';\nimport { Button, Flex, Input, InputNumber, Pagination, Typography, Form, Space } from 'antd';\nimport { ReloadOutlined } from '@ant-design/icons';\n\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\nimport { fetchFilterIds, fetchIds, fetchItems } from 'store/redusers/ActionCreator';\nimport { itemsSlice } from 'store/redusers/ItemsSlice';\n\nimport { Loader, PageWrapper } from 'components';\n\nimport styles from './List.module.scss';\nimport Item from './Item/Item';\n\nconst List = () => {\n  const dispatch = useAppDispatch();\n  const { isLoading, items, isError, page, filterPage, isFilter } = useAppSelector(\n    (state) => state.items,\n  );\n  const { onPageChange, onFilterPageChange } = itemsSlice.actions;\n\n  const [form] = Form.useForm();\n\n  const fetch = () => {\n    dispatch(fetchIds()).then(() => {\n      dispatch(fetchItems());\n    });\n  };\n\n  useEffect(() => {\n    fetch();\n  }, [page]);\n\n  const onFinish = (e: any) => {\n    const filter = Object.keys(e).find((key) => {\n      if (e[key]) return key;\n    });\n\n    if (filter) {\n      const params = { [filter]: e[filter] };\n\n      dispatch(fetchFilterIds(params)).then(() => {\n        dispatch(fetchItems());\n      });\n    }\n  };\n\n  const onReset = () => {\n    form.resetFields();\n    if (isFilter) {\n      fetch();\n    }\n  };\n\n  const onValuesChange = () => {\n    if (\n      !form.getFieldValue('product') &&\n      !form.getFieldValue('brand') &&\n      !form.getFieldValue('price') &&\n      isFilter\n    ) {\n      fetch();\n    }\n  };\n\n  if (isError) {\n    return (\n      <div className={styles.error}>\n        <Typography.Title>Что-то пошло не так, перезагрузите страницу</Typography.Title>\n        <Button icon={<ReloadOutlined />} size='large' type='primary' onClick={() => fetch()} />\n      </div>\n    );\n  }\n  return (\n    <PageWrapper>\n      <h1>Ювелирные украшения</h1>\n\n      <Form\n        form={form}\n        onValuesChange={onValuesChange}\n        layout='vertical'\n        onFinish={onFinish}\n        disabled={isLoading}\n        className={styles.form}\n      >\n        <Form.Item name='product' label='Название'>\n          <Input\n            onChange={() => {\n              form.setFieldValue('brand', '');\n              form.setFieldValue('price', '');\n            }}\n          />\n        </Form.Item>\n        <Form.Item name='brand' label='Бренд'>\n          <Input\n            onChange={() => {\n              form.setFieldValue('product', '');\n              form.setFieldValue('price', '');\n            }}\n          />\n        </Form.Item>\n        <Form.Item name='price' label='Цена'>\n          <InputNumber\n            onChange={() => {\n              form.setFieldValue('product', '');\n              form.setFieldValue('brand', '');\n            }}\n            type='number'\n            controls={false}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Space>\n            <Button type='primary' htmlType='submit'>\n              Принять\n            </Button>\n            <Button htmlType='button' onClick={onReset}>\n              Reset\n            </Button>\n          </Space>\n        </Form.Item>\n      </Form>\n\n      {isLoading && <Loader />}\n\n      {items.length > 0 && !isLoading && !isFilter && (\n        <ul className={styles.list}>\n          {items.map((item) => (\n            <Item item={item} key={item.id} />\n          ))}\n        </ul>\n      )}\n\n      {items.length > 0 && !isLoading && isFilter && (\n        <ul className={styles.list}>\n          {items.map((item, index) => {\n            if (index >= (filterPage - 1) * 50 && index < filterPage * 50)\n              return <Item item={item} key={item.id} />;\n          })}\n        </ul>\n      )}\n\n      {isFilter ? (\n        <Pagination\n          pageSize={50}\n          total={items.length}\n          className={styles.pagination}\n          onChange={(page) => {\n            dispatch(onFilterPageChange(page));\n            window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n          }}\n          showSizeChanger={false}\n        />\n      ) : (\n        <Flex gap={10} className={styles.pagination}>\n          <Button\n            onClick={() => {\n              dispatch(onPageChange(page - 1));\n            }}\n            disabled={page === 1 || isLoading}\n            size='middle'\n            loading={isLoading}\n          >\n            Prev.\n          </Button>\n          <Button\n            onClick={() => {\n              dispatch(onPageChange(page + 1));\n            }}\n            disabled={isLoading}\n            size='middle'\n            loading={isLoading}\n          >\n            Next.\n          </Button>\n        </Flex>\n      )}\n    </PageWrapper>\n  );\n};\n\nexport default List;\n"],"names":["useAppSelector","useSelector","_ref","item","_jsxs","className","styles","children","_jsx","id","product","brand","price","List","dispatch","useDispatch","isLoading","items","isError","page","filterPage","isFilter","state","onPageChange","onFilterPageChange","itemsSlice","actions","form","Form","useForm","fetch","fetchIds","then","fetchItems","useEffect","Typography","Title","Button","icon","ReloadOutlined","size","type","onClick","PageWrapper","onValuesChange","getFieldValue","layout","onFinish","e","filter","Object","keys","find","key","params","fetchFilterIds","disabled","Item","name","label","Input","onChange","setFieldValue","InputNumber","controls","Space","htmlType","onReset","resetFields","Loader","length","map","index","Pagination","pageSize","total","window","scrollTo","top","left","behavior","showSizeChanger","Flex","gap","loading"],"sourceRoot":""}